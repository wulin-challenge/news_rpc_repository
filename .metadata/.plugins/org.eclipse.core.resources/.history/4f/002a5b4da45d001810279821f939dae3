package com.bjhy.news.client.spring;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.config.BeanFactoryPostProcessor;
import org.springframework.beans.factory.config.BeanPostProcessor;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

import com.bjhy.cache.toolkit.extension.ExtensionLoader;
import com.bjhy.news.client.spring.connect.SpringLoadNewsConnect;
import com.bjhy.news.common.connect.AdaptiveNewsConnect;
import com.bjhy.news.common.connect.ConnectConfig;
import com.bjhy.news.common.init.AdaptiveNewsInitializing;
import com.bjhy.news.common.zookeeper.AdaptivePublishService;
import com.bjhy.news.rpc.api.netty.AdaptiveRpcInvokeService;

import cn.wulin.ioc.URL;

@Component
public class ApplicationContextHelper implements DisposableBean, BeanFactoryPostProcessor, BeanPostProcessor, ApplicationContextAware{
	
	private static transient ApplicationContext applicationContext;

	@Override
	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
		ApplicationContextHelper.applicationContext = applicationContext;
	}

	public static ApplicationContext getApplicationContext() {
		return applicationContext;
	}
	
	@Override
	public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {
		return bean;
	}

	@Override
	public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {
		return bean;
	}

	@Override
	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {
		System.out.println();
	}

	@Override
	public void destroy() throws Exception {
		System.out.println();		
	}
	
}
